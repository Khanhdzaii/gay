repeat wait() until game:IsLoaded()
wait(1)
local players = game:GetService("Players")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local lplr = game.Players.LocalPlayer

local name = lplr.Name
local dname = lplr.DisplayName
local workspace = game.Workspace 
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local gravity = workspace.Gravity 
local executor = identifyexecutor() or "???"
local userid = lplr.UserId
local RunService = game:GetService("RunService")
local FPS = 0
local HTTP = game:GetService("HttpService")

local HttpService = game:GetService("HttpService")

local function getISOTime()
    return os.date("!%Y-%m-%dT%H:%M:%S.000Z", os.time()) -- Lấy UTC gốc
end



local StarterGui = game:GetService("StarterGui")
local TeleportService = game:GetService("TeleportService")

local player = players.LocalPlayer
local TweenService = game:GetService("TweenService")
local th = {}
local notifications = {} -- Lưu trữ danh sách thông báo hiện tại

function th.New(message, duration)
    duration = duration or 3 -- Thời gian hiển thị mặc định là 3 giây

    -- Tạo ScreenGui nếu chưa tồn tại
    local player = game.Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")
    local screenGui = playerGui:FindFirstChild("NotificationGui") or Instance.new("ScreenGui")
    screenGui.Name = "NotificationGui"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = playerGui

    -- Tạo khung thông báo
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0.35, 0, 0.08, 0) -- Kích thước khung thông báo
    frame.Position = UDim2.new(0.325, 0, 1, 0) -- Xuất hiện từ bên dưới màn hình
    frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50) -- Màu nền
    frame.BackgroundTransparency = 0.15 -- Độ trong suốt
    frame.BorderSizePixel = 0
    frame.Parent = screenGui

    -- Bo góc mềm mại
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 20)
    corner.Parent = frame

    -- Hiệu ứng gradient
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(44, 120, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(50, 255, 150))
    }
    gradient.Rotation = 45
    gradient.Parent = frame

    -- Tạo văn bản thông báo
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, -20, 1, -20)
    textLabel.Position = UDim2.new(0, 10, 0, 10)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = message
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    textLabel.Font = Enum.Font.GothamBold
    textLabel.TextScaled = true
    textLabel.TextWrapped = true
    textLabel.Parent = frame

    -- Thêm thông báo vào danh sách
    table.insert(notifications, frame)

    -- Tween để thông báo xuất hiện ở vị trí phù hợp
    local targetPosition = UDim2.new(0.325, 0, 0.1 + ((#notifications - 1) * 0.1), 0)
    local showTween = TweenService:Create(frame, TweenInfo.new(0.4, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Position = targetPosition})
    showTween:Play()

    -- Xóa thông báo sau thời gian hiển thị với hiệu ứng mờ dần
    task.delay(duration, function()
        -- Fade out `TextLabel`
        local fadeTweenText = TweenService:Create(textLabel, TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {
            TextTransparency = 1
        })
        fadeTweenText:Play()

        -- Fade out `Frame`
        local fadeTweenFrame = TweenService:Create(frame, TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {
            BackgroundTransparency = 1
        })
        fadeTweenFrame:Play()

        -- Sau khi fade hoàn tất, xóa thông báo
        fadeTweenFrame.Completed:Connect(function()
            frame:Destroy()
            table.remove(notifications, table.find(notifications, frame))

            -- Dịch chuyển các thông báo còn lại lên trên
            for i, notif in ipairs(notifications) do
                local newPosition = UDim2.new(0.325, 0, 0.1 + ((i - 1) * 0.1), 0)
                local moveTween = TweenService:Create(notif, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = newPosition})
                moveTween:Play()
            end
        end)
    end)
end
local function formatNumber(value)
    if value >= 1e9 then
        return string.format("%.1fB", value / 1e9)
    elseif value >= 1e6 then
        return string.format("%.1fM", value / 1e6)
    elseif value >= 1e3 then
        return string.format("%.1fK", value / 1e3)
    else
        return tostring(value)
    end
    end
getgenv().start = true

task.spawn(function()
    local player = game.Players.LocalPlayer
    local startTime = tick() -- Lấy thời gian bắt đầu

    while getgenv().start do 
        task.wait(2)
        pcall(function()
            local playerGui = player:FindFirstChild("PlayerGui")

            -- Kiểm tra và xử lý màn hình tải
            if playerGui and playerGui:FindFirstChild("LoadingGUI") then
                local loadingGui = playerGui.LoadingGUI
                if loadingGui:FindFirstChild("Play") then
                    local args = {
                        [1] = "EnterTheGame",
                        [2] = {}
                    }
                    game:GetService("ReplicatedStorage"):WaitForChild("Chest"):WaitForChild("Remotes"):WaitForChild("Functions"):WaitForChild("EtcFunction"):InvokeServer(unpack(args))
                    -- Chờ nhân vật xuất hiện rồi tự sát
                    repeat task.wait() until player.Character and player.Character:FindFirstChild("Humanoid")
                    player.Character.Humanoid.Health = 0
                end
            end

            -- Kiểm tra và chọn chế độ "Hard"
            if playerGui and playerGui:FindFirstChild("ChooseMap") then
                game:GetService("ReplicatedStorage"):WaitForChild("ChooseMapRemote"):FireServer("Hard")
            end

            if not player:FindFirstChild("DataLoaded") and (tick() - startTime >= 10) then
                warn("Nhân vật chưa load sau 10 giây, dịch chuyển")
                game:GetService("TeleportService"):Teleport(4520749081, player)
                return -- Thoát vòng lặp sau khi dịch chuyển
            end
        end)
    end
end)

local function sea(value)
    if value == 3 and game.PlaceId == 15759515082 then
        return true
    elseif value == 1 and game.PlaceId == 4520749081 then
        return true
    elseif value == 2 and game.PlaceId == 6381829480 then
        return true
    elseif value == 4 and game.PlaceId == 5931540094 then
        return true
    else 
        return false
    end
end
local function updateFPS() 
        FPS += 1 
end 
local player = game.Players.LocalPlayer
local workspace = game.Workspace
local RunService = game:GetService("RunService")
local teleportService = game:GetService("TeleportService")

local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local effectsFolder = game.Workspace:FindFirstChild("Effects")
local mobFolder = game.Workspace:WaitForChild("MOB")
local HttpService = game:GetService("HttpService")
task.spawn(function()
    if game.PlaceId ~= 9821272782 then
        getgenv().Press = function(v)
            return game:GetService("VirtualInputManager"):SendKeyEvent(true, v, false, game);
        end
        while true do wait(500)
            Press("RightBracket");
        end
    else
        while true do wait(500)
            keypress(0xDD);
        end
    end
end)
local FilePath = "TestHubSaveKingLegacy"
local SettingsFile = FilePath .. "/CombinedSettings.json"  -- Đảm bảo sử dụng đúng ký tự phân cách thư mục

local combinedData = {}

-- Kiểm tra và tạo thư mục nếu chưa tồn tại
if not isfolder(FilePath) then
    makefolder(FilePath)
end

-- Khởi tạo combinedData với giá trị mặc định
combinedData = {
    Settings = {
        autoDeleteEffects = false,
        teleraid = false,
        start = true,
        opeskill = true,
        kioru = true,
        eff = true,
        bankin = 100,
        autoDodgeEnabled = false,
        autoTeleport = false,
        maxDistanceFromBoss = 190,
        docao = 50,
        autoWhitelist = false,
        fpsbut = true,
        jobId = "",
        Webhook_URL2 = "https://discord.com/api/webhooks/1289537659907084319/XzR9iejEWrjtdxxwDIHSPS3V51E6wWhcpPdwstYMo-k1HjV4r4w7fwkcRTkgeYL95Kw5",
        AutoRejoin = false,
        hub = 0.2,
        alime = 0.7,
        giaodien = false,
        autobuy = true,
        chonkey = "Copper Key",
        KL = 1,
        slkey = 10,
        autoskhd = true,
        autoskillsea = true,
        autoskhdhop = true,
        autocat = false,
        HopThreshold = 70,
        dropfruit = false,
        SpecialTraders = {""},
        autochapnhan = false,
        autotrade = false
        
        
    }
}

local Settings = combinedData.Settings

-- Hàm tải dữ liệu đã lưu
local function loadSavedData()
    if isfile(SettingsFile) then
        local success, json = pcall(readfile, SettingsFile)
        if success then
            local decodeSuccess, decodedData = pcall(function()
                return HttpService:JSONDecode(json)
            end)
            if decodeSuccess and type(decodedData) == "table" then
                combinedData = decodedData
                Settings = combinedData.Settings  -- Cập nhật lại Settings sau khi tải dữ liệu
            else
                warn("Failed to decode settings: " .. tostring(decodedData))
            end
        else
            warn("Failed to read settings file: " .. tostring(json))
        end
    end
end

-- Hàm lưu dữ liệu vào tệp
local function SaveSettings()
    local success, json = pcall(function()
        return HttpService:JSONEncode(combinedData)
    end)
    
    if not success then
        warn("Failed to encode settings: " .. tostring(json))
        return
    end
    
    -- Ghi tệp với dữ liệu đã mã hóa
    local successWrite = pcall(function()
        writefile(SettingsFile, json)
    end)
    
end

-- Đảm bảo rằng loadSavedData được gọi để tải dữ liệu
loadSavedData()


local function getServerUptime(servers, currentJobId)
    for _, server in pairs(servers) do
        if type(server) == "table" and server.JobId == currentJobId and server.ServerOsTime then
            local uptime = os.time() - server.ServerOsTime -- Tính thời gian server đã hoạt động
            return uptime, server.ServerName, server.JobId
        end
    end
    return nil, nil, nil -- Không tìm thấy server hiện tại
end
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Hàm chuyển đổi giây thành dạng ngày, giờ, phút, giây
local function formatTime(seconds)
    local days = math.floor(seconds / 86400) -- 1 ngày = 86400 giây
    seconds = seconds % 86400
    local hours = math.floor(seconds / 3600) -- 1 giờ = 3600 giây
    seconds = seconds % 3600
    local minutes = math.floor(seconds / 60) -- 1 phút = 60 giây
    seconds = seconds % 60
    return string.format("%d:%d:%d:%d", days, hours, minutes, seconds)
end

-- Lấy danh sách server
local servers = ReplicatedStorage.Chest.Remotes.Functions.GetServers:InvokeServer()
local currentJobId = game.JobId

-- Gọi hàm để lấy thời gian hoạt động của server hiện tại
local uptime, serverName, jobId = getServerUptime(servers, currentJobId)

local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/NamG2657/Scripting/refs/heads/main/OrionLib.lua?t=" .. os.time(), true))()

local pe = game:GetService("Players").LocalPlayer.Name
local Window = OrionLib:MakeWindow({
    Name = "Sea Hub 🐢|金钱和土地",
    IntroEnabled = false,
    IntroText = "Welcome to Sea Hub 🐢|金钱和土地, "..pe.."!",
    IntroIcon = "rbxassetid://6031094686",
    HidePremium = true, 
    SaveConfig = false, 
    ConfigFolder = "TestHubV2"
})

function stop()
    local root = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if root and not root:FindFirstChild("FreezeVelocity") then
        local freeze = Instance.new("BodyVelocity")
        freeze.Name = "FreezeVelocity"
        freeze.Parent = root
        freeze.MaxForce = Vector3.new(math.huge, math.huge, math.huge) -- Lực cực lớn
        freeze.Velocity = Vector3.new(0, 0, 0) -- Vận tốc bằng 0
    end
end

function ngungstop()
    local root = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if root and root:FindFirstChild("FreezeVelocity") then
        root.FreezeVelocity:Destroy()
    end
end

if sea(2) then
local sTab = Window:MakeTab({
    Name = "Sea Hop Beta 🐢 ",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})
if servers then
local Section = sTab:AddSection({Name = serverName})
         end
local function getBossRoot()
    local workspace = game:GetService("Workspace")
    local bossFolders = {workspace.SeaMonster, workspace.GhostMonster}
    local bosses = {"SeaKing", "HydraSeaKing", "Ghost Ship"}

    for _, folder in ipairs(bossFolders) do
        if folder then
            for _, bossName in ipairs(bosses) do
                local boss = folder:FindFirstChild(bossName)
                if boss and boss:FindFirstChild("HumanoidRootPart") then
                    
                    return boss.HumanoidRootPart
                end
            end
        end
    end
    return nil
end

sTab:AddToggle({
    Name = "Auto Aim Skill HD+SK+GS 🐢",
    Default = Settings.autoskillsea,
    Callback = function(value)
        getgenv().AutoS = value
        Settings.autoskillsea = value
        SaveSettings()
        if not value then return end

        task.spawn(function()
            while Settings.autoskillsea do
                task.wait(0.3)
                pcall(function()
                    local workspace = game:GetService("Workspace")
                    local player = game.Players.LocalPlayer
                    local skillAction = game:GetService("ReplicatedStorage").Chest.Remotes.Functions.SkillAction
                    
                    -- Lấy root của boss
                    local skRoot = getBossRoot()
                    if not skRoot then return end

                    local function sendSkill(toolName, prefix, skill)
                        local args = {
                            [1] = prefix.."_"..toolName.."_"..skill,
                            [2] = {["MouseHit"] = skRoot.CFrame, ["Type"] = skill == "M1" and "Click" or "Down"}
                        }
                        skillAction:InvokeServer(unpack(args))
                        if skill ~= "M1" then
                            task.wait(0.05)
                            args[2].Type = "Up"
                            skillAction:InvokeServer(unpack(args))
                        end
                    end

                    -- Kiểm tra Ope V2
                    local hasOpOp = player.Backpack:FindFirstChild("Kioru V2") ~= nil

                    -- Quản lý Ope Room
                    local opeRoom = workspace:FindFirstChild("OpeRoom" .. player.Name)
                    if opeRoom then
                        local roomCFrame, roomSize = opeRoom.CFrame, opeRoom.Size
                        local bossOutsideCount, totalBosses = 0, 0

                        for _, boss in pairs(workspace.SeaMonster:GetChildren()) do
                            if boss:FindFirstChild("HumanoidRootPart") and boss.Name ~= "Hydra's Minion" then
                                totalBosses += 1
                                local bossPos = boss.HumanoidRootPart.Position
                                local isInside = 
                                    math.abs(bossPos.X - roomCFrame.Position.X) <= roomSize.X / 2 and
                                    math.abs(bossPos.Y - roomCFrame.Position.Y) <= roomSize.Y / 2 and
                                    math.abs(bossPos.Z - roomCFrame.Position.Z) <= roomSize.Z / 2
                                
                                if not isInside then
                                    bossOutsideCount += 1
                                end
                            end
                        end

                        if totalBosses > 0 and (bossOutsideCount / totalBosses) > 0.5 then
                            task.spawn(function()
                                skillAction:InvokeServer("DF_OpOp_Z", {["MouseHit"] = CFrame.new(), ["Type"] = "Down"})
                                task.wait(0.05)
                                skillAction:InvokeServer("DF_OpOp_Z", {["MouseHit"] = CFrame.new(), ["Type"] = "Up"})
                            end)
                        end
                    else
                        task.spawn(function()
                            skillAction:InvokeServer("DF_OpOp_Z", {["MouseHit"] = CFrame.new(), ["Type"] = "Down"})
                            task.wait(0.05)
                            skillAction:InvokeServer("DF_OpOp_Z", {["MouseHit"] = CFrame.new(), ["Type"] = "Up"})
                        end)
                    end

                    -- Sử dụng skill
                    if not hasOpOp then
                        local skills = {"M1", "Z", "X", "C", "V", "E"}
                        for _, tool in ipairs(player.Backpack:GetChildren()) do
                            if tool:IsA("Tool") and not tool:FindFirstChild("DevilFruit") and tool.Name ~= "Cyborg" then
                                player.Character.Humanoid:EquipTool(tool)
                                task.wait(0.2)
                                for _, skill in ipairs(skills) do
                                    task.spawn(function()
                                        sendSkill(tool.Name, "SW", skill)
                                        sendSkill(tool.Name, "DF", skill)
                                    end)
                                end
                            end
                        end
                    else
                        -- Skill cho Ope V2 và Kioru V2
                        local opeSkills = {"X", "C", "V"}
                        local kioruSkills = {"M1", "Z", "X"}
                        
                        for _, skill in ipairs(opeSkills) do
                            task.spawn(function() sendSkill("OpOp", "DF", skill) end)
                        end
                        for _, skill in ipairs(kioruSkills) do
                            task.spawn(function() sendSkill("Kioru V2", "SW", skill) end)
                        end
                    end
                end)
            end
        end)
    end
})
getgenv().AutoSeaKing = false

sTab:AddToggle({
    Name = "Auto Teleport SK+HD+GS 🐢",
    Default = Settings.autoskhd,
    Callback = function(value)
        getgenv().AutoSeaKing = value
        Settings.autoskhd = value
        SaveSettings()
        if not value then ngungstop() return end
        
        spawn(function()
            while getgenv().AutoSeaKing do
                pcall(function()
                    stop()
                    local player = game.Players.LocalPlayer
                    local workspaceIsland = game:GetService("Workspace").Island
                    local workspace = game:GetService("Workspace")
                    local seaKing = workspace.SeaMonster:FindFirstChild("SeaKing")
                    local hydra = workspace.SeaMonster:FindFirstChild("HydraSeaKing")
                    local gs = workspace.GhostMonster:FindFirstChild("Ghost Ship")

                    local skHealth = seaKing and seaKing:FindFirstChild("Humanoid") and seaKing.Humanoid.Health or 0
                    local hydraHealth = hydra and hydra:FindFirstChild("Humanoid") and hydra.Humanoid.Health or 0
                    local gsHealth = gs and gs:FindFirstChild("Humanoid") and gs.Humanoid.Health or 0

                    -- 🔹 Nếu tất 
